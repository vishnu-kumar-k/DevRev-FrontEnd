{"ast":null,"code":"var _jsxFileName = \"F:\\\\DevRev\\\\frontend\\\\src\\\\AdminPages\\\\ViewFlight.js\";\nimport React from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\nimport \"../stylesheet/Flight.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewFlight = _ref => {\n  let {\n    fl\n  } = _ref;\n  function subtractTimes(time1, time2) {\n    const date1 = new Date(`1970-01-01T${time1}Z`);\n    const date2 = new Date(`1970-01-01T${time2}Z`);\n    const diff = Math.abs(date1 - date2);\n    const hours = Math.floor(diff / (1000 * 60 * 60)).toString().padStart(2, '0');\n    const minutes = Math.floor(diff / (1000 * 60) % 60).toString().padStart(2, '0');\n    if (minutes === '00') {\n      return `${hours} hours`;\n    } else {\n      return `${hours} hours ${minutes} minutes`;\n    }\n  }\n  function convertTo12HourFormat(time) {\n    let hour = parseInt(time.substring(0, 2));\n    let minute = time.substring(3, 5);\n    let meridiem = \"AM\";\n    if (hour > 12) {\n      hour = hour - 12;\n      meridiem = \"PM\";\n    } else if (hour === 12) {\n      meridiem = \"PM\";\n    } else if (hour === 0) {\n      hour = 12;\n    }\n    return `${hour}:${minute} ${meridiem}`;\n  }\n  function convertDate(date) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"1em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4,\n            className: \"flighttime\",\n            children: convertTo12HourFormat(fl.departureTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4,\n            children: subtractTimes(fl.arrivalTime, fl.departureTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4,\n            className: \"flighttime\",\n            children: convertTo12HourFormat(fl.arrivalTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4,\n            className: \"flighttime\",\n            children: fl.departureDatetime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xs: 4,\n            className: \"flighttime\",\n            children: fl.arrivalDatetime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: fl.flightName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewFlight;\nvar _c;\n$RefreshReg$(_c, \"ViewFlight\");","map":{"version":3,"names":["React","Card","Col","Row","jsxDEV","_jsxDEV","ViewFlight","_ref","fl","subtractTimes","time1","time2","date1","Date","date2","diff","Math","abs","hours","floor","toString","padStart","minutes","convertTo12HourFormat","time","hour","parseInt","substring","minute","meridiem","convertDate","date","children","style","marginTop","Header","md","xs","className","departureTime","fileName","_jsxFileName","lineNumber","columnNumber","arrivalTime","departureDatetime","arrivalDatetime","Body","flightName","_c","$RefreshReg$"],"sources":["F:/DevRev/frontend/src/AdminPages/ViewFlight.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport \"../stylesheet/Flight.css\"\r\nexport const ViewFlight = ({ fl }) => {\r\n    function subtractTimes(time1, time2) {\r\n        const date1 = new Date(`1970-01-01T${time1}Z`);\r\n        const date2 = new Date(`1970-01-01T${time2}Z`);\r\n        const diff = Math.abs(date1 - date2);\r\n        const hours = Math.floor(diff / (1000 * 60 * 60)).toString().padStart(2, '0');\r\n        const minutes = Math.floor((diff / (1000 * 60)) % 60).toString().padStart(2, '0');\r\n        if (minutes === '00') {\r\n          return `${hours} hours`;\r\n        } else {\r\n          return `${hours} hours ${minutes} minutes`;\r\n        }\r\n      }\r\n      function convertTo12HourFormat(time) {\r\n        let hour = parseInt(time.substring(0, 2));\r\n        let minute = time.substring(3, 5);\r\n        let meridiem = \"AM\";\r\n        \r\n        if (hour > 12) {\r\n          hour = hour - 12;\r\n          meridiem = \"PM\";\r\n        } else if (hour === 12) {\r\n          meridiem = \"PM\";\r\n        } else if (hour === 0) {\r\n          hour = 12;\r\n        }\r\n      \r\n        return `${hour}:${minute} ${meridiem}`;\r\n      }\r\n      function convertDate(date)\r\n      {\r\n        \r\n      }\r\n      \r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ marginTop: \"1em\" }}>\r\n        <Card.Header>\r\n          <Row>\r\n            <Col md={4} xs={4} className=\"flighttime\">{convertTo12HourFormat(fl.departureTime)}</Col>\r\n          \r\n            <Col md={4} xs={4}>{subtractTimes(fl.arrivalTime, fl.departureTime)}</Col>\r\n            <Col md={4} xs={4}className=\"flighttime\">{convertTo12HourFormat(fl.arrivalTime)}</Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={4} xs={4} className=\"flighttime\">{fl.departureDatetime}</Col>\r\n          \r\n          <Col md={4} xs={4}></Col>\r\n          <Col md={4} xs={4}className=\"flighttime\">{fl.arrivalDatetime}</Col>\r\n          </Row>\r\n          </Card.Header>\r\n          <Card.Body>{fl.flightName}</Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjC,OAAO,MAAMC,UAAU,GAAGC,IAAA,IAAY;EAAA,IAAX;IAAEC;EAAG,CAAC,GAAAD,IAAA;EAC7B,SAASE,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACjC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAE,cAAaH,KAAM,GAAE,CAAC;IAC9C,MAAMI,KAAK,GAAG,IAAID,IAAI,CAAE,cAAaF,KAAM,GAAE,CAAC;IAC9C,MAAMI,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACL,KAAK,GAAGE,KAAK,CAAC;IACpC,MAAMI,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7E,MAAMC,OAAO,GAAGN,IAAI,CAACG,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjF,IAAIC,OAAO,KAAK,IAAI,EAAE;MACpB,OAAQ,GAAEJ,KAAM,QAAO;IACzB,CAAC,MAAM;MACL,OAAQ,GAAEA,KAAM,UAASI,OAAQ,UAAS;IAC5C;EACF;EACA,SAASC,qBAAqBA,CAACC,IAAI,EAAE;IACnC,IAAIC,IAAI,GAAGC,QAAQ,CAACF,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,IAAIC,MAAM,GAAGJ,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IACjC,IAAIE,QAAQ,GAAG,IAAI;IAEnB,IAAIJ,IAAI,GAAG,EAAE,EAAE;MACbA,IAAI,GAAGA,IAAI,GAAG,EAAE;MAChBI,QAAQ,GAAG,IAAI;IACjB,CAAC,MAAM,IAAIJ,IAAI,KAAK,EAAE,EAAE;MACtBI,QAAQ,GAAG,IAAI;IACjB,CAAC,MAAM,IAAIJ,IAAI,KAAK,CAAC,EAAE;MACrBA,IAAI,GAAG,EAAE;IACX;IAEA,OAAQ,GAAEA,IAAK,IAAGG,MAAO,IAAGC,QAAS,EAAC;EACxC;EACA,SAASC,WAAWA,CAACC,IAAI,EACzB,CAEA;EAGJ,oBACE1B,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACJ,IAAI;MAACgC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAF,QAAA,gBAChC3B,OAAA,CAACJ,IAAI,CAACkC,MAAM;QAAAH,QAAA,gBACV3B,OAAA,CAACF,GAAG;UAAA6B,QAAA,gBACF3B,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAACC,SAAS,EAAC,YAAY;YAAAN,QAAA,EAAET,qBAAqB,CAACf,EAAE,CAAC+B,aAAa;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAEzFtC,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAAL,QAAA,EAAEvB,aAAa,CAACD,EAAE,CAACoC,WAAW,EAAEpC,EAAE,CAAC+B,aAAa;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1EtC,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAAC,SAAS,EAAC,YAAY;YAAAN,QAAA,EAAET,qBAAqB,CAACf,EAAE,CAACoC,WAAW;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CAAC,eACNtC,OAAA,CAACF,GAAG;UAAA6B,QAAA,gBACJ3B,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAACC,SAAS,EAAC,YAAY;YAAAN,QAAA,EAAExB,EAAE,CAACqC;UAAiB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAEtEtC,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzBtC,OAAA,CAACH,GAAG;YAACkC,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAAC,SAAS,EAAC,YAAY;YAAAN,QAAA,EAAExB,EAAE,CAACsC;UAAe;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACdtC,OAAA,CAACJ,IAAI,CAAC8C,IAAI;QAAAf,QAAA,EAAExB,EAAE,CAACwC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACM,EAAA,GAxDW3C,UAAU;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}