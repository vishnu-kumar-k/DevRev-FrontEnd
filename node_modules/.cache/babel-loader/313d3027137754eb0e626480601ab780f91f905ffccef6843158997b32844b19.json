{"ast":null,"code":"var _jsxFileName = \"F:\\\\DevRev\\\\frontend\\\\src\\\\AdminPages\\\\ViewFlight.js\";\nimport React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewFlight = _ref => {\n  let {\n    fl\n  } = _ref;\n  function subtractTimes(time1, time2) {\n    const date1 = new Date(`1970-01-01T${time1}Z`);\n    const date2 = new Date(`1970-01-01T${time2}Z`);\n    const diff = Math.abs(date1 - date2);\n    const hours = Math.floor(diff / (1000 * 60 * 60)).toString().padStart(2, '0');\n    const minutes = Math.floor(diff / (1000 * 60) % 60).toString().padStart(2, '0');\n    const seconds = Math.floor(diff / 1000 % 60).toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: fl.flightName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: fl.departureTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: subtractTimes(fl.arrivalTime, fl.departureTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewFlight;\nvar _c;\n$RefreshReg$(_c, \"ViewFlight\");","map":{"version":3,"names":["React","Card","Col","Row","jsxDEV","_jsxDEV","ViewFlight","_ref","fl","subtractTimes","time1","time2","date1","Date","date2","diff","Math","abs","hours","floor","toString","padStart","minutes","seconds","children","Header","flightName","fileName","_jsxFileName","lineNumber","columnNumber","Body","departureTime","arrivalTime","_c","$RefreshReg$"],"sources":["F:/DevRev/frontend/src/AdminPages/ViewFlight.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\n\r\nexport const ViewFlight = ({fl}) => {\r\n    function subtractTimes(time1, time2) {\r\n        const date1 = new Date(`1970-01-01T${time1}Z`);\r\n        const date2 = new Date(`1970-01-01T${time2}Z`);\r\n        const diff = Math.abs(date1 - date2);\r\n        const hours = Math.floor(diff / (1000 * 60 * 60)).toString().padStart(2, '0');\r\n        const minutes = Math.floor((diff / (1000 * 60)) % 60).toString().padStart(2, '0');\r\n        const seconds = Math.floor((diff / 1000) % 60).toString().padStart(2, '0');\r\n        return `${hours}:${minutes}:${seconds}`;\r\n      }\r\n      \r\n      \r\n  return (\r\n    <div>\r\n        <Card>\r\n            <Card.Header>{fl.flightName}</Card.Header>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col>{fl.departureTime}</Col>\r\n                    <Col>{subtractTimes(fl.arrivalTime,fl.departureTime)}</Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,UAAU,GAAGC,IAAA,IAAU;EAAA,IAAT;IAACC;EAAE,CAAC,GAAAD,IAAA;EAC3B,SAASE,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACjC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAE,cAAaH,KAAM,GAAE,CAAC;IAC9C,MAAMI,KAAK,GAAG,IAAID,IAAI,CAAE,cAAaF,KAAM,GAAE,CAAC;IAC9C,MAAMI,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACL,KAAK,GAAGE,KAAK,CAAC;IACpC,MAAMI,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7E,MAAMC,OAAO,GAAGN,IAAI,CAACG,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjF,MAAME,OAAO,GAAGP,IAAI,CAACG,KAAK,CAAEJ,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1E,OAAQ,GAAEH,KAAM,IAAGI,OAAQ,IAAGC,OAAQ,EAAC;EACzC;EAGJ,oBACElB,OAAA;IAAAmB,QAAA,eACInB,OAAA,CAACJ,IAAI;MAAAuB,QAAA,gBACDnB,OAAA,CAACJ,IAAI,CAACwB,MAAM;QAAAD,QAAA,EAAEhB,EAAE,CAACkB;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC1CzB,OAAA,CAACJ,IAAI,CAAC8B,IAAI;QAAAP,QAAA,eACNnB,OAAA,CAACF,GAAG;UAAAqB,QAAA,gBACAnB,OAAA,CAACH,GAAG;YAAAsB,QAAA,EAAEhB,EAAE,CAACwB;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7BzB,OAAA,CAACH,GAAG;YAAAsB,QAAA,EAAEf,aAAa,CAACD,EAAE,CAACyB,WAAW,EAACzB,EAAE,CAACwB,aAAa;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAI,EAAA,GAzBY5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}